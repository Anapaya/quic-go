load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/lucas-clemente/quic-go
gazelle(name = "gazelle")

go_library(
    name = "go_default_library",
    srcs = [
        "buffer_pool.go",
        "client.go",
        "closed_session.go",
        "config.go",
        "conn.go",
        "conn_generic.go",
        "conn_helper_darwin.go",
        "conn_helper_freebsd.go",
        "conn_helper_linux.go",
        "conn_id_generator.go",
        "conn_id_manager.go",
        "conn_oob.go",
        "conn_windows.go",
        "crypto_stream.go",
        "crypto_stream_manager.go",
        "datagram_queue.go",
        "errors.go",
        "frame_sorter.go",
        "framer.go",
        "interface.go",
        "mockgen.go",
        "mtu_discoverer.go",
        "multiplexer.go",
        "packet_handler_map.go",
        "packet_packer.go",
        "packet_unpacker.go",
        "receive_stream.go",
        "retransmission_queue.go",
        "send_conn.go",
        "send_queue.go",
        "send_stream.go",
        "server.go",
        "session.go",
        "stream.go",
        "streams_map.go",
        "streams_map_generic_helper.go",
        "streams_map_incoming_bidi.go",
        "streams_map_incoming_generic.go",
        "streams_map_incoming_uni.go",
        "streams_map_outgoing_bidi.go",
        "streams_map_outgoing_generic.go",
        "streams_map_outgoing_uni.go",
        "token_store.go",
        "window_update_queue.go",
    ],
    importpath = "github.com/lucas-clemente/quic-go",
    visibility = ["//visibility:public"],
    deps = [
        "//internal/ackhandler:go_default_library",
        "//internal/flowcontrol:go_default_library",
        "//internal/handshake:go_default_library",
        "//internal/logutils:go_default_library",
        "//internal/protocol:go_default_library",
        "//internal/qerr:go_default_library",
        "//internal/utils:go_default_library",
        "//internal/wire:go_default_library",
        "//logging:go_default_library",
        "//quicvarint:go_default_library",
        "@com_github_cheekybits_genny//generic:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "@org_golang_x_net//ipv4:go_default_library",
            "@org_golang_x_net//ipv6:go_default_library",
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "@org_golang_x_net//ipv4:go_default_library",
            "@org_golang_x_net//ipv6:go_default_library",
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "@org_golang_x_net//ipv4:go_default_library",
            "@org_golang_x_net//ipv6:go_default_library",
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "@org_golang_x_net//ipv4:go_default_library",
            "@org_golang_x_net//ipv6:go_default_library",
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "@org_golang_x_net//ipv4:go_default_library",
            "@org_golang_x_net//ipv6:go_default_library",
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = [
        "buffer_pool_test.go",
        "client_test.go",
        "closed_session_test.go",
        "config_test.go",
        "conn_id_generator_test.go",
        "conn_id_manager_test.go",
        "conn_oob_test.go",
        "conn_test.go",
        "conn_windows_test.go",
        "crypto_stream_manager_test.go",
        "crypto_stream_test.go",
        "datagram_queue_test.go",
        "frame_sorter_test.go",
        "framer_test.go",
        "mock_ack_frame_source_test.go",
        "mock_batch_conn_test.go",
        "mock_crypto_data_handler_test.go",
        "mock_crypto_stream_test.go",
        "mock_frame_source_test.go",
        "mock_mtu_discoverer_test.go",
        "mock_multiplexer_test.go",
        "mock_packer_test.go",
        "mock_packet_handler_manager_test.go",
        "mock_packet_handler_test.go",
        "mock_packetconn_test.go",
        "mock_quic_session_test.go",
        "mock_receive_stream_internal_test.go",
        "mock_sealing_manager_test.go",
        "mock_send_conn_test.go",
        "mock_send_stream_internal_test.go",
        "mock_sender_test.go",
        "mock_session_runner_test.go",
        "mock_stream_getter_test.go",
        "mock_stream_internal_test.go",
        "mock_stream_manager_test.go",
        "mock_stream_sender_test.go",
        "mock_token_store_test.go",
        "mock_unknown_packet_handler_test.go",
        "mock_unpacker_test.go",
        "mtu_discoverer_test.go",
        "multiplexer_test.go",
        "packet_handler_map_test.go",
        "packet_packer_test.go",
        "packet_unpacker_test.go",
        "quic_suite_test.go",
        "receive_stream_test.go",
        "retransmission_queue_test.go",
        "send_conn_test.go",
        "send_queue_test.go",
        "send_stream_test.go",
        "server_test.go",
        "session_test.go",
        "stream_test.go",
        "streams_map_incoming_generic_test.go",
        "streams_map_outgoing_generic_test.go",
        "streams_map_test.go",
        "token_store_test.go",
        "window_update_queue_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//internal/ackhandler:go_default_library",
        "//internal/flowcontrol:go_default_library",
        "//internal/handshake:go_default_library",
        "//internal/mocks:go_default_library",
        "//internal/mocks/ackhandler:go_default_library",
        "//internal/mocks/logging:go_default_library",
        "//internal/protocol:go_default_library",
        "//internal/qerr:go_default_library",
        "//internal/testdata:go_default_library",
        "//internal/testutils:go_default_library",
        "//internal/utils:go_default_library",
        "//internal/wire:go_default_library",
        "//logging:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_onsi_ginkgo//:go_default_library",
        "@com_github_onsi_ginkgo//extensions/table:go_default_library",
        "@com_github_onsi_gomega//:go_default_library",
        "@com_github_onsi_gomega//gbytes:go_default_library",
        "@org_golang_x_net//ipv4:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:aix": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:android": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:illumos": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:js": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "@org_golang_x_sys//unix:go_default_library",
        ],
        "//conditions:default": [],
    }),
)
